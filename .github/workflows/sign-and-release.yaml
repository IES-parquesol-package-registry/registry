name: Sign registry and publish
run-name: Sign registry and publish
on: 
  push:
    branches:
      - main
permissions: write-all
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
     
      - name: Install registry-signer
        run: curl -s https://api.github.com/repos/IES-parquesol-package-registry/registry-signer/releases/latest | jq -r '.assets[0].browser_download_url' | xargs -I {} curl -L -o registry-signer {}
      
      - name: make registry-signer executable
        run: chmod +x registry-signer
        
      - name: sign the registry file
        run: ./registry-signer --file index.json --sign ${{ secrets.SIGNING_KEY }}
        
      - name: Calcular nueva versión
        id: version
        run: |
          # Obtener el último tag, si no existe, se usa v0.0.0
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Último tag: $LAST_TAG"
          # Eliminar la "v" y separar versión
          VERSION=${LAST_TAG#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          # Incrementar la parte de parche
          PATCH=$((PATCH + 1))
          NEW_TAG="v${MAJOR}.${MINOR}.${PATCH}"
          echo "Nueva versión: $NEW_TAG"
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT
          
      - name: Crear nuevo tag y pushearlo
        env:
          NEW_TAG: ${{ steps.version.outputs.new_tag }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "$NEW_TAG"
          git push origin "$NEW_TAG"
          
      - name: Crear GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.new_tag }}
          name: "Release ${{ steps.version.outputs.new_tag }}"
          files: |
            ./index.json
            ./sign.sig
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
